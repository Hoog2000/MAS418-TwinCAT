<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="P_Outputs" Id="{23ead774-783f-47e1-a9cb-10c4360d68bd}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_Outputs
VAR
	fbWinchValveOutput : FB_ValveOutput;
	fbCylValveOutput : FB_ValveOutput;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[G_Outputs.stWinchValveOutput.bEnable := G_Work.bManualMode; 
fbWinchValveOutput(
	bEnable := G_Work.bWinchEnable,
	bDeadBandCompOn := G_Parameters.stParam.bDeadBandCompOn,
	stValveDeadBand := G_Parameters.stParam.stWinchValveDeadBand,
	fNormalizedInput := G_Work.fWinchControlInput,
	nOutput => G_Outputs.stWinchValveOutput.nValveOutput
);

G_Outputs.stCylValveOutput.bEnable := G_Work.bManualMode;
fbCylValveOutput(
	bEnable := G_Work.bCylEnable OR G_Work.fCylTime > 0.0,
	bDeadBandCompOn := G_Parameters.stParam.bDeadBandCompOn,
	stValveDeadBand := G_Parameters.stParam.stCylValveDeadBand,
	fNormalizedInput := G_Work.fCylControlInput,
	nOutput => G_Outputs.stCylValveOutput.nValveOutput
);
IF (G_VB.eStatus = E_Status.Starting) THEN
	//G_Outputs.stCylValveOutput.bEnable := TRUE;
	//G_Outputs.stWinchValveOutput.bEnable := TRUE;
ELSIF (G_VB.eStatus = E_Status.Running) THEN
	G_Outputs.bGreenLED := TRUE;
	G_Outputs.bRedLED := FALSE;
	G_Outputs.stCylValveOutput.bEnable := TRUE;
	G_Outputs.stWinchValveOutput.bEnable := TRUE;
ELSIF (G_VB.eStatus = E_Status.Fault) OR (G_VB.eStatus = E_Status.Stoping) THEN
	G_Outputs.bRedLED := TRUE;
	G_Outputs.bGreenLED := FALSE;
	G_Outputs.stCylValveOutput.bEnable := FALSE;
	G_Outputs.stWinchValveOutput.bEnable := FALSE;
ELSE
	G_Outputs.bRedLED := FALSE;
	G_Outputs.bGreenLED := FALSE;
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>